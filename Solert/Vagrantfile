# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/xenial64"
#  config.vm.box = "ubuntu/trusty64"

  config.vm.synced_folder ".", "/vagrant", disabled: false

  require 'ipaddr'
  
  $leader_ip = "192.168.10.10"
  $num_managers = 1
  $manager_start_ip = "192.168.10.11"
  $num_workers = 1
  $worker_start_ip = "192.168.10.100"
  # $replicas = 5 ##currently using --global as replication mode
  
  config.vm.define leader_name = "manager-01" do |leader|
    leader.vm.hostname = leader_name
    leader.vm.network "private_network", ip: $leader_ip
#    leader.vm.network "forwarded_port", guest: 7000, host: 7000 #cassandra
#    leader.vm.network "forwarded_port", guest: 7001, host: 7001 #cassandra
#    leader.vm.network "forwarded_port", guest: 9042, host: 9042 #cassandra
#    leader.vm.network "forwarded_port", guest: 7199, host: 7199 #cassandra
#    leader.vm.network "forwarded_port", guest: 9160, host: 9160 #cassandra
    leader.vm.network "forwarded_port", guest: 9000, host: 9001 #wacc

    leader.vm.provider "virtualbox" do |v|
      v.memory = 2048
    end

    leader.vm.provision "shell", args: [$leader_ip], inline: <<-SHELL
      docker swarm init --advertise-addr $1
      mkdir /vagrant/docker-join-tokens
      docker swarm join-token worker --quiet > /vagrant/docker-join-tokens/worker
      docker swarm join-token manager --quiet > /vagrant/docker-join-tokens/manager
    SHELL

	leader.vm.provision "shell", args: [$leader_ip], inline: <<-SHELL
      docker service create --name webserver -p 9000:9000 --mode global timonback/wacc:webserver
    SHELL
	
	leader.vm.provision "shell", args: [$leader_ip], inline: <<-SHELL
      docker service create --name cassandra -p 7000:7000 -p 9042:9042 --replicas 1 cassandra:latest
    SHELL
  end
  
  (2..$num_managers).each do |i|
    config.vm.define manager_name = "manager-%02d" % [i] do |config|
        # just split out the ip
        ip = IPAddr.new($manager_start_ip)
        $manager_start_ip = ip.succ.to_s

        config.vm.hostname = manager_name
        config.vm.network :private_network, ip: $manager_start_ip

        config.vm.provision "shell", args: [$leader_ip], inline: <<-SHELL
          docker swarm join --token $(cat /vagrant/docker-join-tokens/manager) $1
        SHELL
    end
  end
  
  (1..$num_workers).each do |i|
    config.vm.define worker_name = "worker-%02d" % [i] do |config|
        # just split out the ip
        ip = IPAddr.new($worker_start_ip)
        $worker_start_ip = ip.succ.to_s

        config.vm.hostname = worker_name
        config.vm.network :private_network, ip: $worker_start_ip 
		config.vm.network "forwarded_port", guest: 9000, host: (9010+i)

        config.vm.provision "shell", args: [$leader_ip], inline: <<-SHELL
          docker swarm join --token $(cat /vagrant/docker-join-tokens/worker) $1
        SHELL
    end
  end
  
  # docker run -it --name cassandra -p 7000:7000 -p 7001:7001 -p 9042:9042 -p 7199:7199 -p 9160:9160 cassandra:latest
  config.vm.define debug = "debug" do |debug|
    debug.vm.hostname = "debug"
    debug.vm.network "private_network", ip: "192.168.11.11"
    debug.vm.network "forwarded_port", guest: 7000, host: 7001 #cassandra
    debug.vm.network "forwarded_port", guest: 7199, host: 7200 #cassandra
    debug.vm.network "forwarded_port", guest: 9042, host: 9043 #cassandra
    debug.vm.network "forwarded_port", guest: 9160, host: 9161 #cassandra

    debug.vm.provider "virtualbox" do |v|
      v.memory = 2048
    end
  end
  
  config.vm.define debug2 = "debug2" do |debug2|
    debug2.vm.hostname = "debug2"
    debug2.vm.network "private_network", ip: "192.168.11.12"
    debug2.vm.network "forwarded_port", guest: 7000, host: 7003 #cassandra
    debug2.vm.network "forwarded_port", guest: 7199, host: 7201 #cassandra
    debug2.vm.network "forwarded_port", guest: 9042, host: 9044 #cassandra
    debug2.vm.network "forwarded_port", guest: 9160, host: 9162 #cassandra

    debug2.vm.provider "virtualbox" do |v|
      v.memory = 2048
    end
  end
  
  config.vm.provision "docker" do |d|
  end
  
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
  end
  

  # install weave
  #config.vm.provision "shell", inline: <<-SHELL
  #  sudo curl -L git.io/weave -o /usr/local/bin/weave
  #  sudo chmod +x /usr/local/bin/weave
  #  weave launch
  #SHELL
end
